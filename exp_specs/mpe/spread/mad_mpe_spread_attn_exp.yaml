meta_data:
  exp_name: "mad_mpe"
  script_path: "run_scripts/train.py"
  num_workers: 1  # num of process to open
  job_name: "{dataset}/h_{horizon}-{model}-r_{returns_scale}-guidew_{condition_guidance_w}-ctde_{decentralized_execution}"

variables:
#  seed: [100, 200, 300, 400, 500]
  seed: [100]

  horizon: [24]

  returns_scale: [700]
  dataset: ["simple_spread-expert"]
  condition_guidance_w: [1.2]

constants:
  # misc
  seed: 100
  env_type: "mpe"
  n_agents: 3
  use_action: True
  discrete_action: False
  residual_attn: True
  decentralized_execution: False
  use_zero_padding: False
  pred_future_padding: True
  use_ddim_sample: False
  n_ddim_steps: 15

  # model
  model: "models.SharedConvAttentionDeconv"
  diffusion: "models.GaussianDiffusion"
  share_inv: True
  history_horizon: 0
  n_diffusion_steps: 200
  action_weight: 10
  loss_weights: null
  loss_discount: 1
  dim_mults: [1, 4, 8]
  returns_condition: True
  predict_epsilon: True
  calc_energy: False
  dim: 128
  hidden_dim: 256
  condition_dropout: 0.25
  condition_guidance_w: 1.2
  train_only_inv: False
  clip_denoised: True
  test_ret: 0.9
  renderer: "utils.MPERenderer"

  # dataset
  loader: "datasets.SequenceDataset"
  normalizer: "CDFNormalizer"
  max_n_episodes: 1000
  preprocess_fns: []
  use_padding: True
  discount: 0.99
  max_path_length: 25
  termination_penalty: 0.0

  # training
  n_steps_per_epoch: 500
  n_train_steps: 2000
  batch_size: 8
  learning_rate: 0.0002
  gradient_accumulate_every: 1
  ema_decay: 0.995
  log_freq: 10
  save_freq: 500
  sample_freq: 100
  n_saves: 1
  save_parallel: False
  n_reference: 3
  save_checkpoints: True

  # eval
  evaluator: "utils.MADEvaluator"
  num_eval: 1
  eval_freq: 1000

  # load checkpoint
  continue_training: True


